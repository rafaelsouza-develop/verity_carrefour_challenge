package com.example.githubrepos.domain.mapper

import com.example.githubrepos.data.model.ReposResponse
import com.example.githubrepos.domain.model.Repos

fun ReposResponse.toRepos(): Repos {
    return Repos(
        id = this.id,
        nodeId = this.nodeId,
        name = this.name,
        fullName = this.fullName,
        isPrivate = this.isPrivate,
        owner = this.owner.toDomain(),
        htmlUrl = this.htmlUrl,
        description = this.description,
        isFork = this.isFork,
        url = this.url,
        forksUrl = this.forksUrl,
        keysUrl = this.keysUrl,
        collaboratorsUrl = this.collaboratorsUrl,
        teamsUrl = this.teamsUrl,
        hooksUrl = this.hooksUrl,
        issueEventsUrl = this.issueEventsUrl,
        eventsUrl = this.eventsUrl,
        assigneesUrl = this.assigneesUrl,
        branchesUrl = this.branchesUrl,
        tagsUrl = this.tagsUrl,
        blobsUrl = this.blobsUrl,
        gitTagsUrl = this.gitTagsUrl,
        gitRefsUrl = this.gitRefsUrl,
        treesUrl = this.treesUrl,
        statusesUrl = this.statusesUrl,
        languagesUrl = this.languagesUrl,
        stargazersUrl = this.stargazersUrl,
        contributorsUrl = this.contributorsUrl,
        subscribersUrl = this.subscribersUrl,
        subscriptionUrl = this.subscriptionUrl,
        commitsUrl = this.commitsUrl,
        gitCommitsUrl = this.gitCommitsUrl,
        commentsUrl = this.commentsUrl,
        issueCommentUrl = this.issueCommentUrl,
        contentsUrl = this.contentsUrl,
        compareUrl = this.compareUrl,
        mergesUrl = this.mergesUrl,
        archiveUrl = this.archiveUrl,
        downloadsUrl = this.downloadsUrl,
        issuesUrl = this.issuesUrl,
        pullsUrl = this.pullsUrl,
        milestonesUrl = this.milestonesUrl,
        notificationsUrl = this.notificationsUrl,
        labelsUrl = this.labelsUrl,
        releasesUrl = this.releasesUrl,
        deploymentsUrl = this.deploymentsUrl,
        createdAt = this.createdAt,
        updatedAt = this.updatedAt,
        pushedAt = this.pushedAt,
        gitUrl = this.gitUrl,
        sshUrl = this.sshUrl,
        cloneUrl = this.cloneUrl,
        svnUrl = this.svnUrl,
        homepage = this.homepage,
        size = this.size,
        stargazersCount = this.stargazersCount,
        watchersCount = this.watchersCount,
        language = this.language,
        hasIssues = this.hasIssues,
        hasProjects = this.hasProjects,
        hasDownloads = this.hasDownloads,
        hasWiki = this.hasWiki,
        hasPages = this.hasPages,
        hasDiscussions = this.hasDiscussions,
        forksCount = this.forksCount,
        mirrorUrl = this.mirrorUrl,
        archived = this.archived,
        disabled = this.disabled,
        openIssuesCount = this.openIssuesCount,
        license = this.license?.toDomain(),
        allowForking = this.allowForking,
        isTemplate = this.isTemplate,
        webCommitSignoffRequired = this.webCommitSignoffRequired,
        topics = this.topics,
        visibility = this.visibility,
        forks = this.forks,
        openIssues = this.openIssues,
        watchers = this.watchers,
        defaultBranch = this.defaultBranch
    )
}